version: 2.1

workflows:
  main:
    jobs:
      - test:
          name: test-<< matrix.go_version >><< matrix.submodule >>
          matrix:
            parameters:
              go_version:
                - '1.17'
              submodule:
                - ""
                - example

jobs:

  test:
    parameters:
      go_version:
        type: string
      submodule:
        type: string
    docker:
      - image: cimg/go:<<parameters.go_version>>
      - image: circleci/postgres:13.3-ram
        environment:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: dbname
      - image: circleci/redis:5.0.6-alpine
        command: [ "--databases", "1000000" ]
      - image: rabbitmq:3.8-management-alpine
    working_directory: ~/project/<<parameters.submodule>>
    steps:
      - checkout:
          path: ~/project
      - setup
      - run:
          name: Run tests
          command: ./do test
      - run:
          name: Procces
          command: sleep 1h
      - cleanup

commands:
  setup:
    steps:
      - run:
          name: Adding GOPATH bin to PATH
          command: echo 'export PATH="$PATH:$(go env GOPATH)/bin"' >> "$BASH_ENV"
      - run:
          name: Install devtools
          command: ./do install-devtools
      - run:
          name: Make test-reports dir
          command: mkdir -p test-reports
      - run:
          name: Download dependencies
          command: go mod download
      - run:
          name: Build
          command: lscpu

  cleanup:
    steps:
      - store_artifacts:
          path: test-reports
      - store_test_results:
          path: test-reports

